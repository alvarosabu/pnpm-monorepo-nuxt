{
  "name": "get-port-please",
  "version": "2.5.0",
  "description": "Get an available TCP port to listen",
  "repository": "unjs/get-port-please",
  "license": "MIT",
  "exports": {
    ".": {
      "import": "./dist/index.mjs",
      "require": "./dist/index.cjs"
    }
  },
  "main": "./dist/index.cjs",
  "types": "./dist/index.d.ts",
  "files": [
    "dist"
  ],
  "dependencies": {
    "fs-memo": "^1.2.0"
  },
  "devDependencies": {
    "@nuxtjs/eslint-config-typescript": "latest",
    "@types/node": "latest",
    "c8": "latest",
    "eslint": "latest",
    "standard-version": "latest",
    "typescript": "latest",
    "unbuild": "latest",
    "vitest": "^0.5.5"
  },
  "packageManager": "pnpm@6.32.3",
  "scripts": {
    "build": "unbuild",
    "lint": "eslint --ext ts .",
    "release": "pnpm build && standard-version && pnpm publish && git push --follow-tags",
    "test": "pnpm lint && vitest run"
  },
  "readme": "![get-port-please](https://user-images.githubusercontent.com/904724/101664848-9bc16380-3a4c-11eb-9e3a-faad60c86b2e.png)\n\n# get-port-please\n\n> Get an available TCP port to listen\n\n[![npm](https://img.shields.io/npm/dt/get-port-please.svg?style=flat-square)](https://npmjs.com/package/get-port-please)\n[![npm (scoped with tag)](https://img.shields.io/npm/v/get-port-please/latest.svg?style=flat-square)](https://npmjs.com/package/get-port-please)\n\n## Usage\n\nInstall package:\n\n```bash\nyarn add get-port-please\n# or\nor npm install get-port-please\n```\n\n```js\n// ESM\nimport { getPort, checkPort, getRandomPort, waitForPort } from 'get-port-please'\n\n// CommonJS\nconst { getPort, checkPort, getRandomPort, waitForPort } = require('get-port-please')\n```\n\n```ts\ngetPort(options?: GetPortOptions): Promise<number>\ncheckPort(port: number, host?: string): Promise<number | false>\nwaitForPort(port: number, options): Promise<number | false>\n```\n\nTry sequence is: port > ports > memo > random\n\n## Options\n\n```ts\ninterface GetPortOptions {\n  name?: string\n\n  random?: boolean\n  port?: number\n  portRange?: [from: number, to: number]\n  ports?: number[]\n  host?: string\n\n  memoDir?: string\n  memoName?: string\n}\n```\n\n### `name`\n\nUnique name for port memorizing. Default is `default`.\n\n### `random`\n\nIf enabled, `port` and `ports` will be ignored. Default is `false`.\n\n### `port`\n\nFirst port to check. Default is `process.env.PORT || 3000`\n\n### `ports`\n\nAlternative ports to check.\n\n### `portRange`\n\nAlternative port range to check. Deefault is `[3000,3100]`\n\n### `host`\n\nThe host to check. Default is `process.env.HOST` otherwise all available hosts will be checked.\n\n### `memoDir` / `memoName`\n\nOptions passed to [fs-memo](https://github.com/unjs/fs-memo)\n\n- Default dir: `node_modules/get-port/dist`\n- Defalt name: `.get-port`\n\n## License\n\nMIT\n"
}